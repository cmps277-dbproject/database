//  List all Suppliers
SELECT * FROM suppliers;

//  List all Clients
SELECT * FROM clients;

//  As a manager check on your employees
SELECT * FROM employees;

// Select all receipts
SELECT * FROM Receipt;

//  List all available Clothes
SELECT * FROM allclothes;

//  List all Clothes of a certain brand
SELECT * FROM clothes WHERE Brand="X";

//  List all Clothes from a certain Supplier + WHERE NAME
SELECT * FROM `SuppliersClothes`;

//  Selects all the clothes bought for each receipt
SELECT * FROM `AllClientsReceipts`;

//  Selects all the clothes bought for receipt Y
SELECT * FROM `AllClientsReceipts` WHERE  receiptid="Y";

//  Selects all the clothes bought for client X
SELECT * FROM `AllClientsReceipts` WHERE  clientid="X";

//  Search for Clothes that have material Y brand Z
SELECT * FROM clothes WHERE Brand="X" AND Material="Y";

// filter using one or more of these criteria (Category/Color/Material/Brand)
SELECT * FROM allclothes WHERE Category="X" AND Color="Y" AND Material="Z" AND Brand="W";

// Get clothes categories
SELECT Category FROM Clothes

// Get clothes colors
SELECT Color FROM Clothes

// Get clothes materials
SELECT Material FROM Clothes

// Get clothes brands
SELECT Brand FROM Clothes


######
// Update clothes to set clientid&workerid so it is considered bought
UPDATE Clothes SET ClientID=X, WorkerID=Y

// Insert a new row to receipt (create a new receipt)
INSERT INTO Receipt 
(`ClientID`, `ReceiptID`, `Date_Time`, `MethodOfPayment`,`WorkerID`) 
VALUES 
(X,Y,Z,W,A);

// Insert new row into ClothesReceipt to link the clothes bought to the receipt
INSERT INTO clothesshop.ClothesReceipt 
(`ClothesID`, `ReceiptID`) 
VALUES 
(X,Y);

// Add new clothes
INSERT INTO clothesshop.Clothes 
(clothesid, color, brand, material, price, gender, category) 
VALUES 
(...);

####################
  COMPLEX QUERIES
####################
// As an owner check which managers manage which employees
SELECT Employee.WorkerID, Employee.`Employee Name`, ManagerManages.workerid, `Manager Name`
FROM (SELECT Worker.Name AS `Employee Name` , employees.WorkerID
    FROM Worker, Employees
    WHERE Worker.WorkerID=Employees.WorkerID) AS `Employee`
LEFT JOIN (SELECT *
    FROM Manages
    LEFT JOIN (SELECT Worker.Name AS `Manager Name`, Manager.WorkerID
            FROM Worker, Manager
            WHERE Worker.WorkerID=Manager.WorkerID) AS `Manager`
    ON Manages.ManagerWorkerID=Manager.WorkerID) AS `ManagerManages`
ON Employee.WorkerID=ManagerManages.EmployeeWorkerID
